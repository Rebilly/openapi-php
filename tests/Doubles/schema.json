{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Demo Blog",
    "description": "A sample blog API to demonstrate swagger-2.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Veaceslav medvedev",
      "email": "slavcopost@gmail.com",
      "url": "https://github.com/slavcodev/php-swagger/"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/slavcodev/php-swagger/LICENSE"
    }
  },
  "externalDocs": {
    "description": "More info here",
    "url": "https://swagger.io/about"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {},
  "paths": {
    "/{id}": {
      "$ref": "#/paths/~1posts~1{id}"
    },
    "/posts": {
      "parameters": [
        {
          "name": "q",
          "in": "query",
          "description": "Search query string",
          "type": "string"
        }
      ],
      "get": {
        "description": "Returns all posts",
        "responses": {
          "200": {
            "description": "Post list response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            },
            "headers": {
              "Allow": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new post in the blog",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Post to add to the blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post response",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "The post ID",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "description": "Returns post by ID",
        "responses": {
          "200": {
            "description": "Post response",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/Person"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comments": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      },
      "required": ["title", "body", "author"]
    },
    "Person": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      },
      "required": ["name", "email"]
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/Person"
        },
        "text": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": ["author", "text"]
    }
  }
}
